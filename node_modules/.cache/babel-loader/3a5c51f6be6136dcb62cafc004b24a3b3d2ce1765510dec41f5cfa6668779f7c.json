{"ast":null,"code":"var _jsxFileName = \"/home/lect01/practice-react/src/App.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n\n// function App() {\n//   const [toDo, setTodo] = useState(\"\");\n//   const [toDos, setTodos] = useState([]);\n//   const onChange = (event) => setTodo(event.target.value);\n//   const onSubmit = (event) => {\n//     event.preventDefault();\n//     if (toDo === \"\") {\n//       return;\n//     }\n//     // setTodos에서 ...배열 은 이전에 가지고 있던 배열을 전부 가져오는 것을 뜻한다.\n//     setTodos(currentAarray => [toDo, ...currentAarray]);\n//     setTodo(\"\");\n//   };\n//   useEffect(() => {\n//     console.log(toDos);\n//   }, [toDos]);\n\n//   return (\n//     <div>\n//       <h1>My To Dos : {toDos.length}</h1>\n//       <form onSubmit={onSubmit}>\n//         <input onChange={onChange} value={toDo} type=\"text\" placeholder=\"Write your to do....\" />\n//         <button>Add To do</button>\n//       </form>\n//       <hr />\n//       <ul>\n//         {toDos.map((item, index) => (<li key={index}>{item}</li>))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // fetch(\"https://api.coinpaprika.com/v1/trickers\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The Coins!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","loading","setLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lect01/practice-react/src/App.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n\n// function App() {\n//   const [toDo, setTodo] = useState(\"\");\n//   const [toDos, setTodos] = useState([]);\n//   const onChange = (event) => setTodo(event.target.value);\n//   const onSubmit = (event) => {\n//     event.preventDefault();\n//     if (toDo === \"\") {\n//       return;\n//     }\n//     // setTodos에서 ...배열 은 이전에 가지고 있던 배열을 전부 가져오는 것을 뜻한다.\n//     setTodos(currentAarray => [toDo, ...currentAarray]);\n//     setTodo(\"\");\n//   };\n//   useEffect(() => {\n//     console.log(toDos);\n//   }, [toDos]);\n\n//   return (\n//     <div>\n//       <h1>My To Dos : {toDos.length}</h1>\n//       <form onSubmit={onSubmit}>\n//         <input onChange={onChange} value={toDo} type=\"text\" placeholder=\"Write your to do....\" />\n//         <button>Add To do</button>\n//       </form>\n//       <hr />\n//       <ul>\n//         {toDos.map((item, index) => (<li key={index}>{item}</li>))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // fetch(\"https://api.coinpaprika.com/v1/trickers\");\n  }, [])\n  return (\n    <div>\n      <h1>The Coins!</h1>\n      {loading ? <strong>Loading....</strong> : null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5CD,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EACN,oBACEG,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBN,OAAO,gBAAGH,OAAA;MAAAK,QAAA,EAAQ;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,GAAG,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAACP,EAAA,CAXQD,GAAG;AAAAS,EAAA,GAAHT,GAAG;AAaZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}