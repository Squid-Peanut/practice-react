{"ast":null,"code":"var _jsxFileName = \"/home/lect01/practice-react/src/App3.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n  // .then 대신에 async await를 사용한다\n  const getMovies = async () => {\n    const json = await (await fetch(\"https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year\")).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Movie","jsxDEV","_jsxDEV","App","_s","loading","setLoading","movies","setMovies","getMovies","json","fetch","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","_c","$RefreshReg$"],"sources":["/home/lect01/practice-react/src/App3.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Movie from \"./Movie\";\n\nfunction App() {\n    const [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n\n    // .then 대신에 async await를 사용한다\n    const getMovies = async () => {\n        const json = await (await fetch(\"https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year\")).json();\n        setMovies(json.data.movies);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovies();\n\n    }, [])\n    console.log(movies);\n    return (\n        <div>\n            {loading ?\n                <h1>Loading....</h1> :\n                <div>{movies.map((movie) =>\n                    <Movie />\n                )}</div>\n            }\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAAC,wEAAwE,CAAC,EAAED,IAAI,CAAC,CAAC;IACjHF,SAAS,CAACE,IAAI,CAACE,IAAI,CAACL,MAAM,CAAC;IAC3BD,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EACDR,SAAS,CAAC,MAAM;IACZW,SAAS,CAAC,CAAC;EAEf,CAAC,EAAE,EAAE,CAAC;EACNI,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;EACnB,oBACIL,OAAA;IAAAa,QAAA,EACKV,OAAO,gBACJH,OAAA;MAAAa,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBACpBjB,OAAA;MAAAa,QAAA,EAAMR,MAAM,CAACa,GAAG,CAAEC,KAAK,iBACnBnB,OAAA,CAACF,KAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CAAC;AAEd;AAACf,EAAA,CAzBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}